services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --accesslog=true
      # Additions for mTLS for devices
      - "--serversTransport.insecureSkipVerify=false"
      - "--entrypoints.websecure.http.tls=true"
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./infra/traefik/dynamic.yml:/etc/traefik/dynamic/dynamic.yml:ro
      - ./infra/traefik/certs:/etc/traefik/certs:ro   # mount CA chain and server cert if using file certs
      - ./letsencrypt:/letsencrypt
    networks:
      - web

  db:
    image: postgres:15-alpine
    container_name: nest-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-app
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      TZ: Asia/Tehran
    depends_on:
      db:
        condition: service_healthy
    networks:
      - web
      - internal
  signer:
    image: node:20-alpine
    container_name: cert-signer
    restart: unless-stopped
    working_dir: /work
    volumes:
      - ./infra/ca:/ca:ro            # mount CA cert/key only accessible to signer (never commit)
      - ./infra/ca-run:/ca-run      # writable tmp if needed
      - ./:/work:ro                 # access to app for signing helper optionally
    entrypoint: ["tail", "-f", "/dev/null"]
    networks:
      - internal
volumes:
  pgdata:
  redisdata:
  letsencrypt:

networks:
  web:
    driver: bridge
  internal:
    driver: bridge
